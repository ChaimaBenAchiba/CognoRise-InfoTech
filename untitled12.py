# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17l4CbuNIXcwC3xFRRBaOrC09ugGu-BFx

# Import libraries
"""

import numpy as np # creer des tableaux numpy
import matplotlib.pyplot as plt
import pandas as pd # pour creer une trame de data pandas
import seaborn as sns
import sklearn.datasets
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split #diviser lensemble de data en data formation et data test
from sklearn.metrics import confusion_matrix, accuracy_score #evaluer le modele

"""
# data collection

"""

# Read Dataset

breast_cancer_dataset =sklearn.datasets.load_breast_cancer()
print(breast_cancer_dataset)

#loading data to data frame
data_frame = pd.DataFrame(breast_cancer_dataset.data, columns = breast_cancer_dataset.feature_names)

#first 5 rows dataframe
data_frame.head()

data_frame['label']=breast_cancer_dataset.target
#last 5 rows dataframe
data_frame.tail()

# number of rows and columns
# shape of dataset
data_frame.shape

#some statistical measures of data
data_frame.describe()

data_frame.info()

# Count of null value in each column
data_frame.isnull().sum()

# Data type of each column
data_frame.dtypes

"""1-->Benign

0-->malignant
"""

data_frame['label'].value_counts()

data_frame.groupby('label').mean()

"""separate features and target"""

# Dropping unnecessary columns
X = data_frame.drop(columns='label', axis = 1)
Y=data_frame['label']
print(X)

print(Y)



